service: laravel

# bref:
#   team: laravel-aws

# frameworkVersion: '3'

plugins:
  - ./vendor/bref/bref


provider:
  name: aws
  region: ap-south-1
  runtime: provided.al2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - '*'
          Resource: '*'
  cfnRole: arn:aws:iam::870968578789:role/CloudFormationExecutionRole
  environment:
    APP_ENV: production
    APP_DEBUG: false
    # Inject dynamic base URL
    APP_URL: https://${self:custom.apiGatewayBaseUrl}
    BASE_URL: https://${self:custom.apiGatewayBaseUrl}/
    OAUTH_REDIRECT_URL: https://${self:custom.apiGatewayBaseUrl}/login/github/callback
    GOOGLE_REDIRECT: https://${self:custom.apiGatewayBaseUrl}/login/google/callback

package:
  patterns:
    - '!node_modules/**'
    - '!public/storage'
    - '!resources/assets/**'
    - '!resources/css/**'
    - '!resources/images/**'
    - '!resources/js/**'
    - '!storage/**'
    - '!tests/**'
    - '!database/*.sqlite'
    - '!public/build/**'
    - 'public/build/manifest.json'

functions:
  web:
    handler: public/index.php
    runtime: provided.al2
    layers:
      - arn:aws:lambda:ap-south-1:534081306603:layer:php-82-fpm:100
    timeout: 28
    events:
      - httpApi: '*'

  artisan:
    handler: artisan
    runtime: provided.al2
    layers:
      - arn:aws:lambda:ap-south-1:534081306603:layer:php-82:100
    timeout: 720
    events:
      - schedule:
          rate: rate(1 minute)
          input: '"schedule:run"'
      - schedule:
          rate: rate(1 minute)
          input: '"queue:work --tries=3"'

resources:
  Resources:

    #S3 Bucket for file storage
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: !Sub '${AWS::StackName}-aws-storage'
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerEnforced
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: false
          IgnorePublicAcls: true
          RestrictPublicBuckets: false

    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: !Sub '${S3Bucket.Arn}/*'

    #RDS Instance (MySQL)
    RDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: !Sub '${AWS::StackName}-db'
        Engine: mysql
        EngineVersion: 8.0.35
        DBInstanceClass: db.t3.micro   #Free Tier eligible
        AllocatedStorage: 20           #Up to 20GB free
        StorageType: gp2               #Default general purpose SSD
        MasterUsername: laravel
        MasterUserPassword: laravelpass
        BackupRetentionPeriod: 0
        PubliclyAccessible: true
        DeletionProtection: false
        MultiAZ: false                 #Disable high availability (free tier doesnâ€™t support)
        AutoMinorVersionUpgrade: true

    #SQS Queue for Laravel jobs
    LaravelQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: laravel-queue

  Outputs:
    RDSInstanceEndpoint:
      Value: !GetAtt RDSInstance.Endpoint.Address
    S3Bucket:
      Value: !Ref S3Bucket
    LaravelQueueUrl:
      Value: !Ref LaravelQueue

custom:
  apiGatewayBaseUrl: https://qe813igdf9.execute-api.ap-south-1.amazonaws.com  #Update after first deploy
